service: serverless-auction-house
custom:
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  esbuild:
    platform: "node"
    target: node18
    sourcemap: linked
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
    reloadHandler: true
provider:
  name: aws
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  runtime: nodejs18.x
  memorySize: 128
  timeout: 10
  logRetentionInDays: 7
  httpApi:
    cors: true

functions:
  app:
    handler: backend/src/handler.handler
    events:
      - httpApi:
          path: "/{proxy+}"
          method: "*"
resources:
  Resources:
    ApiGatewayV2Api:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: ${self:service}-api
        ProtocolType: HTTP
    # Cognito User Pool definition


    # DynamoDB Tables
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-users
        AttributeDefinitions:
          - AttributeName: "user-id"
            AttributeType: "S"
          - AttributeName: "create-time"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "user-id"
            KeyType: "HASH"
          - AttributeName: "create-time"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
    ItemsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-items
        AttributeDefinitions:
          - AttributeName: "item-id"
            AttributeType: "S"
          - AttributeName: "create-time"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "item-id"
            KeyType: "HASH"
          - AttributeName: "create-time"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
    BidsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-bids
        AttributeDefinitions:
          - AttributeName: "bid-id"
            AttributeType: "S"
          - AttributeName: "create-time"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "bid-id"
            KeyType: "HASH"
          - AttributeName: "create-time"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST

    UsersTable1:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-users1
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
          - AttributeName: "createAt"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
          - AttributeName: "createAt"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
    ItemsTable1:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-items1
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
          - AttributeName: "createAt"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
          - AttributeName: "createAt"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
    BidsTable1:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-bids1
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
          - AttributeName: "createAt"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
          - AttributeName: "createAt"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
      
plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild
  - serverless-offline
package:
  patterns:
    - "!**/*.test.ts"
  individually: true