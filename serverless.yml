service: serverless-auction-house

custom:
  stage: ${opt:stage, 'dev1'}
  region: ${opt:region, 'us-east-1'}
  esbuild:
    platform: "node"
    target: node18
    sourcemap: linked
    external:
      - mock-aws-s3
      - nock  # Exclude unnecessary dev dependencies
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
    reloadHandler: true

provider:
  name: aws
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  runtime: nodejs18.x
  memorySize: 128
  timeout: 10
  logRetentionInDays: 7
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:637423462092:table/*

functions:
  app:
    handler: backend/src/handler.handler
    events:
      - httpApi:
          path: "/{proxy+}"
          method: "*"

resources:
  Resources:
    ApiGatewayV2Api:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: ${self:service}-api
        ProtocolType: HTTP

    UsersTable3:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-users3
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST

    ItemsTable3:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-items3
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST

    BidsTable3:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-bids3
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild
  - serverless-offline

package:
  patterns:
    - "!**/*.test.ts"
    - "!node_modules/mock-aws-s3/**"  # Explicitly exclude mock dependency
    - "!node_modules/nock/**"  # Explicitly exclude nock if not needed
    - "!node_modules/aws-sdk/**"  # AWS SDK is bundled by AWS Lambda runtime
  individually: true
  excludeDevDependencies: true
